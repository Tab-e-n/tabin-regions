[gd_scene load_steps=6 format=3 uid="uid://dl73eme14hwup"]

[ext_resource type="StyleBox" uid="uid://l8vkqqi4prkx" path="res://Styles/style_label_normal_box.tres" id="1_8movm"]
[ext_resource type="Texture2D" uid="uid://bht6umkfovrvf" path="res://Sprites/exit.png" id="2_y6cxs"]
[ext_resource type="Texture2D" uid="uid://dubjrpib0fm5n" path="res://Sprites/save_csv.png" id="3_0g6er"]
[ext_resource type="Texture2D" uid="uid://c23kwcfws5x1n" path="res://Sprites/save_replay.png" id="4_ur71k"]

[sub_resource type="GDScript" id="GDScript_6r6wn"]
script/source = "extends Node2D


@onready var window_size : Vector2 = get_viewport_rect().size


const farthest_left : int = 576


var farthest_right : int = 576


func _ready():
	# bad code inbound
	var pos : int = 1
	var size : int = GameStats.stats.size()
	for placement in range(size + 1):
		for stats in GameStats.stats:
			var place_text : String
			if placement == 0:
				place_text = \"N/A\"
			else:
				place_text = String.num(placement)
			if stats[\"placement\"] == place_text:
#				print(stats)
				new_stats_panel(stats, pos)
				pos += 1
	
	var columb_amount : int = pos#GameStats.stats.size() + 1
	
	if columb_amount > 6:
		farthest_right += (columb_amount - 6) * 192
		$buttons/expo1.visible = true


func new_stats_panel(stats : Dictionary, pos : int):
	var panel : Panel = Panel.new()
	
	panel.add_theme_stylebox_override(\"panel\", preload(\"res://Styles/style_label_normal_box.tres\"))
	panel.size = Vector2(192, 640)
	panel.modulate = stats[\"align color\"]
	panel.position.x = 192 * pos
	
	$columbs.add_child(panel)
	
	var sprite : Sprite2D = Sprite2D.new()
	
	sprite.texture = preload(\"res://Sprites/capital.png\")
	sprite.position.x = 192 * pos + 32
	sprite.position.y = 32
	sprite.modulate = stats[\"align color\"]
	
	$columbs.add_child(sprite)
	
	var label : Label = Label.new()
	label.position.x = 192 * pos
	#label.position = Vector2(-32, -32)
	label.size = Vector2(64, 64)
	label.vertical_alignment = VERTICAL_ALIGNMENT_CENTER
	label.horizontal_alignment = HORIZONTAL_ALIGNMENT_CENTER
	label.text = stats[\"placement\"]
	
	$columbs.add_child(label)
	
	var columb : Label = Label.new()
	
	columb.clip_text = true
	columb.position.y += 8
	columb.size = Vector2(192, 192)
	columb.position.x = 192 * pos
	var funny_spacing_value : String = \"                \"
	columb.text = funny_spacing_value + stats[\"alignment name\"] + \"\\n\" + funny_spacing_value + AIControler.CONTROLER_NAMES[stats[\"controler\"]]
	columb.text += \"\\nTurns lasted:\\n\" + String.num(stats[\"turns lasted\"])
	columb.text += \"\\nFirst actions done:\\n\" + String.num(stats[\"first actions done\"])
	columb.text += \"\\nBonus actions done:\\n\" + String.num(stats[\"bonus actions done\"])
	columb.text += \"\\nEnemy units removed:\\n\" + String.num(stats[\"enemy units removed\"])
	columb.text += \"\\nUnits lost:\\n\" + String.num(stats[\"units lost\"])
	columb.text += \"\\nUnits mobilized:\\n\" + String.num(stats[\"units mobilized\"])
	columb.text += \"\\nmost regions owned:\\n\" + String.num(stats[\"most regions owned\"])
	columb.text += \"\\nmost capitals owned:\\n\" + String.num(stats[\"most capitals owned\"])
	columb.text += \"\\nregions captured:\\n\" + String.num(stats[\"regions captured\"])
	columb.text += \"\\nregions reinforced:\\n\" + String.num(stats[\"regions reinforced\"])
	columb.text += \"\\ncapital regions captured:\\n\" + String.num(stats[\"capital regions captured\"])
	
	$columbs.add_child(columb)


func _physics_process(delta):
	if Input.is_action_just_pressed(\"escape\"):
		leave()
	
	var mouse_position = get_viewport().get_mouse_position()
	var move_speed = 8
	if Input.is_action_pressed(\"shift\"):
		move_speed *= 2.0
	
	if mouse_position.x > window_size.x - 64 or Input.is_action_pressed(\"right\"):
		$cam.position.x += move_speed
		if $cam.position.x > farthest_right:
			$cam.position.x = farthest_right
	if mouse_position.x < 64 or Input.is_action_pressed(\"left\"):
		$cam.position.x -= move_speed
		if $cam.position.x < farthest_left:
			$cam.position.x = farthest_left


func _on_csv_pressed():
	var map_name : String = MapSetup.current_map_name.trim_suffix(\".tscn\")
	GameStats.save_as_csv(map_name.replace(\"_\", \" \"))
	$buttons/save.text = \"Saved CSV!\"


func _on_replay_pressed():
	var map_name : String = MapSetup.current_map_name.trim_suffix(\".tscn\")
	ReplayControl.save_replay(map_name.replace(\"_\", \" \"))
	$buttons/save.text = \"Saved Replay!\"


func leave():
	get_tree().change_scene_to_file(\"res://setup_scene.tscn\")

"

[node name="Stats" type="Node2D"]
script = SubResource("GDScript_6r6wn")

[node name="columbs" type="Node2D" parent="."]

[node name="buttons" type="Panel" parent="."]
offset_right = 192.0
offset_bottom = 640.0
theme_override_styles/panel = ExtResource("1_8movm")

[node name="leave" type="TextureButton" parent="buttons"]
modulate = Color(0.627451, 0.627451, 0.627451, 1)
layout_mode = 0
offset_left = 32.0
offset_top = 32.0
offset_right = 96.0
offset_bottom = 96.0
texture_normal = ExtResource("2_y6cxs")

[node name="csv" type="TextureButton" parent="buttons"]
modulate = Color(0.627451, 0.627451, 0.627451, 1)
layout_mode = 0
offset_left = 32.0
offset_top = 352.0
offset_right = 160.0
offset_bottom = 480.0
texture_normal = ExtResource("3_0g6er")

[node name="replay" type="TextureButton" parent="buttons"]
modulate = Color(0.627451, 0.627451, 0.627451, 1)
layout_mode = 0
offset_left = 32.0
offset_top = 480.0
offset_right = 160.0
offset_bottom = 608.0
texture_normal = ExtResource("4_ur71k")

[node name="expo1" type="Label" parent="buttons"]
visible = false
layout_mode = 0
offset_left = 16.0
offset_top = 104.0
offset_right = 176.0
offset_bottom = 192.0
text = "Hover your cursor
over the edges of
the screen to move."
clip_text = true

[node name="expo2" type="Label" parent="buttons"]
layout_mode = 0
offset_left = 16.0
offset_top = 200.0
offset_right = 176.0
offset_bottom = 344.0
text = "CSV Files are stored
in your Appdata
folder under
/Roaming/TRegions."
clip_text = true

[node name="save" type="Label" parent="buttons"]
layout_mode = 0
offset_left = 16.0
offset_top = 296.0
offset_right = 176.0
offset_bottom = 344.0
horizontal_alignment = 1
vertical_alignment = 2
clip_text = true

[node name="cam" type="Camera2D" parent="."]
position = Vector2(576, 320)

[connection signal="pressed" from="buttons/leave" to="." method="leave"]
[connection signal="pressed" from="buttons/csv" to="." method="_on_csv_pressed"]
[connection signal="pressed" from="buttons/replay" to="." method="_on_replay_pressed"]
